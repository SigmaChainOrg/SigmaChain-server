"""Adding enums - policy - group and User relations

Revision ID: d98c9ea0bbcc
Revises: a3416c043b66
Create Date: 2025-02-09 22:44:51.855294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd98c9ea0bbcc'
down_revision: Union[str, None] = 'a3416c043b66'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['access_control.group.group_id'], ),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('name'),
    schema='access_control'
    )
    op.create_table('policy',
    sa.Column('policy_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('REQUESTER', 'REVIEWER', 'SUPERVISOR', 'MANAGER', name='role_enum', schema='access_control'), nullable=False),
    sa.Column('resource', sa.Enum('OWN_REQUESTS', 'ALL_REQUESTS', 'OWN_PATTERNS', 'ALL_PATTERNS', name='resource_enum', schema='access_control'), nullable=False),
    sa.Column('operation', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', name='operation_enum', schema='access_control'), nullable=False),
    sa.PrimaryKeyConstraint('policy_id'),
    schema='access_control'
    )
    op.create_table('user_groups',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['access_control.group.group_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['access_control.user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_id'),
    schema='access_control'
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('REQUESTER', 'REVIEWER', 'SUPERVISOR', 'MANAGER', name='role_enum', schema='access_control'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['access_control.user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role'),
    schema='access_control'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles', schema='access_control')
    op.drop_table('user_groups', schema='access_control')
    op.drop_table('policy', schema='access_control')
    op.drop_table('group', schema='access_control')
    # ### end Alembic commands ###
