"""Created workflow squema and request, activity form

Revision ID: 4bdb0f8a3ba9
Revises: eb2ba73a6288
Create Date: 2025-04-01 21:17:10.620484

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4bdb0f8a3ba9"
down_revision: Union[str, None] = "eb2ba73a6288"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("create schema if not exists workflow")
    op.create_table(
        "form_pattern",
        sa.Column("form_pattern_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("form_pattern_id"),
        schema="workflow",
    )
    op.create_table(
        "activity",
        sa.Column("activity_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("label", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("estimated_time", sa.Interval(), nullable=False),
        sa.Column("form_pattern_id", sa.Integer(), nullable=True),
        sa.Column("next_activity_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["form_pattern_id"],
            ["workflow.form_pattern.form_pattern_id"],
        ),
        sa.ForeignKeyConstraint(
            ["next_activity_id"],
            ["workflow.activity.activity_id"],
        ),
        sa.PrimaryKeyConstraint("activity_id"),
        schema="workflow",
    )
    op.create_index(
        op.f("ix_workflow_activity_label"),
        "activity",
        ["label"],
        unique=False,
        schema="workflow",
    )
    op.create_table(
        "activity_assignees",
        sa.Column(
            "activity_assignee_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.Column(
            "assignee_type",
            sa.Enum(
                "user", "group", "requester", name="assignee_enum", schema="workflow"
            ),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("group_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["workflow.activity.activity_id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["access_control.group.group_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["access_control.user.user_id"],
        ),
        sa.PrimaryKeyConstraint("activity_assignee_id"),
        schema="workflow",
    )
    op.create_table(
        "request_pattern",
        sa.Column("request_pattern_id", sa.UUID(), nullable=False),
        sa.Column("label", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("supervisor_id", sa.UUID(), nullable=True),
        sa.Column("activity_id", sa.Integer(), nullable=True),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("published_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["workflow.activity.activity_id"],
        ),
        sa.ForeignKeyConstraint(
            ["supervisor_id"],
            ["access_control.user.user_id"],
        ),
        sa.PrimaryKeyConstraint("request_pattern_id"),
        schema="workflow",
    )
    op.create_index(
        op.f("ix_workflow_request_pattern_label"),
        "request_pattern",
        ["label"],
        unique=False,
        schema="workflow",
    )
    op.create_table(
        "request_groups",
        sa.Column("request_pattern_id", sa.UUID(), nullable=False),
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["access_control.group.group_id"],
        ),
        sa.ForeignKeyConstraint(
            ["request_pattern_id"],
            ["workflow.request_pattern.request_pattern_id"],
        ),
        sa.PrimaryKeyConstraint("request_pattern_id", "group_id"),
        schema="workflow",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("request_groups", schema="workflow")
    op.drop_index(
        op.f("ix_workflow_request_pattern_label"),
        table_name="request_pattern",
        schema="workflow",
    )
    op.drop_table("request_pattern", schema="workflow")
    op.drop_table("activity_assignees", schema="workflow")
    op.drop_index(
        op.f("ix_workflow_activity_label"), table_name="activity", schema="workflow"
    )
    op.drop_table("activity", schema="workflow")
    op.drop_table("form_pattern", schema="workflow")
    op.execute("drop schema workflow cascade")
    # ### end Alembic commands ###
